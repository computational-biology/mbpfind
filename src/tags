!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	libbpfind.f	/^1       format(a132)$/;"	l	subroutine:readcif	file:
1	libbpfind.f	/^1       format(a132)$/;"	l	subroutine:stream	file:
1	libbpfind.f	/^1     format('The following options can be used:')$/;"	l	subroutine:showoptn	file:
10	libbpfind.f	/^10     CONTINUE$/;"	l	subroutine:rnahelix	file:
10	libbpfind.f	/^10    format('-ML [character] to select desired chain identifier ',$/;"	l	subroutine:showoptn	file:
100	libbpfind.f	/^100     continue$/;"	l	subroutine:bpfind	file:
100	libbpfind.f	/^100   CONTINUE$/;"	l	subroutine:rnahelix	file:
101	libbpfind.f	/^101   format(I5,I5,1x,A3,1x,a1,I5,I5,1x,A3,1x,a1)$/;"	l	subroutine:bpfind	file:
11	libbpfind.f	/^11    format('-NMR to calculate base pairing information for the first',$/;"	l	subroutine:showoptn	file:
110	libbpfind.f	/^110     format('ATOM',1X,I6,2X,A4,A3,1X,A1,I8,4X,3F8.3,2x,f4.2,F6.2)$/;"	l	subroutine:bpfind	file:
111	libbpfind.f	/^111     format('ATOM',1X,I6,2X,A4,A3,I6,4X,3F8.3,2x,f4.2,F6.2)$/;"	l	subroutine:cleanpdb	file:
112	libbpfind.f	/^112	format('END')$/;"	l	subroutine:cleanpdb	file:
113	libbpfind.f	/^113     format(80a1)$/;"	l	subroutine:cleanpdb	file:
114	libbpfind.f	/^114     format('>',a20,':',a4)$/;"	l	subroutine:cleanpdb	file:
114	libbpfind.f	/^114     ngvar=i-1$/;"	l	subroutine:bpfind	file:
115	libbpfind.f	/^115     navar=i-1$/;"	l	subroutine:bpfind	file:
116	libbpfind.f	/^116   format(1x,I5,1x,I7,1x,A3,1x,a1,1x,A4,4(1x,I5,1x,I5,1x,$/;"	l	subroutine:bpfind	file:
117	libbpfind.f	/^117     ncvar=i-1$/;"	l	subroutine:bpfind	file:
118	libbpfind.f	/^118     continue$/;"	l	subroutine:bpfind	file:
119	libbpfind.f	/^119   format(1x,I5,1x,I7,1x,A3,1x,a1,1x,A4,4(1x,I5,1x,I5,1x,$/;"	l	subroutine:bpfind	file:
12	libbpfind.f	/^12    format('-CIF to calculate base pairing information from mmCIF'$/;"	l	subroutine:showoptn	file:
13	libbpfind.f	/^13      format(I5,i5,1x,A1,I5)$/;"	l	subroutine:bpfind	file:
13	libbpfind.f	/^13    format('-MD [number] to calculate base pairing information for',$/;"	l	subroutine:showoptn	file:
14	libbpfind.f	/^14    format(a132)$/;"	l	subroutine:rnahelix	file:
15	libbpfind.f	/^15     format(a3)$/;"	l	subroutine:bpfind	file:
15	libbpfind.f	/^15    FORMAT(I6,i8,t16,A3,7X,I6,t39,A3,t50,A5,t63,i6,t100,i6)$/;"	l	subroutine:rnahelix	file:
16	libbpfind.f	/^16      format(I5,I5,1x,A1,4(I5,I5,1x,A1,2x,A3,1X,A1,f8.5))$/;"	l	subroutine:bpfind	file:
160	libbpfind.f	/^160   format('#====='\/'# Generated by BPFIND release June 2020, version$/;"	l	subroutine:bpfind	file:
162	libbpfind.f	/^162   format(i6,1x,a1,3i6)$/;"	l	subroutine:rnahelix	file:
163	libbpfind.f	/^163   format('#',18('-'),'>PDB_ins_code. Useful in tRNA with long',$/;"	l	subroutine:bpfind	file:
163	libbpfind.f	/^163   format('&',20000a1)$/;"	l	subroutine:rnahelix	file:
164	libbpfind.f	/^164   format('#',41('-'),'>PDB_ins_code of the paired residue')$/;"	l	subroutine:bpfind	file:
164	libbpfind.f	/^164   format('>',a,' nts=',i5,' Created by BPFIND')$/;"	l	subroutine:rnahelix	file:
165	libbpfind.f	/^165     format(I5,1x,4(I5,1x,A3,1X,A1,1x,a2))$/;"	l	subroutine:bpfind	file:
165	libbpfind.f	/^165   format(20000a1)$/;"	l	subroutine:rnahelix	file:
166	libbpfind.f	/^166   format(a4,1x,i5,a1,1x,a4,1x,a1)$/;"	l	subroutine:rnahelix	file:
167	libbpfind.f	/^167     format(a5) $/;"	l	subroutine:bpfind	file:
167	libbpfind.f	/^167   format('rm -f ',2a30)$/;"	l	subroutine:rnahelix	file:
168	libbpfind.f	/^168   format(70a1)$/;"	l	subroutine:bpfind	file:
168	libbpfind.f	/^168   format(70a1)$/;"	l	subroutine:rnahelix	file:
169	libbpfind.f	/^169   format('>',a,':',a,a,' Created by BPFIND')$/;"	l	subroutine:rnahelix	file:
17	libbpfind.f	/^17	format(i5,1x,i5,1x,a3,1x,a1,1x,2a1)$/;"	l	subroutine:rnahelix	file:
170	libbpfind.f	/^170   format('#',a,' nts=',i5,' Created by BPFIND')$/;"	l	subroutine:rnahelix	file:
199	libbpfind.f	/^199     continue$/;"	l	subroutine:readcif	file:
2	libbpfind.f	/^2       format(a15)$/;"	l	subroutine:stream	file:
2	libbpfind.f	/^2     format('-HD [value] to set default hydrogen bond distance ',$/;"	l	subroutine:showoptn	file:
20	libbpfind.f	/^20     continue$/;"	l	subroutine:rnahelix	file:
210	libbpfind.f	/^210     write(6,9999)$/;"	l	subroutine:bpfind	file:
211	libbpfind.f	/^211	continue$/;"	l	subroutine:bpfind	file:
25	libbpfind.f	/^25    FORMAT(I5,1X,I5,A4,1X,A1,1X,'BP',5x,a4)$/;"	l	subroutine:rnahelix	file:
255	libbpfind.f	/^255       format('#',A80)$/;"	l	subroutine:bpfind	file:
256	libbpfind.f	/^256     continue$/;"	l	subroutine:bpfind	file:
275	libbpfind.f	/^275     format('#HEADER   Consideration of CH...O H-Bond: ',a3)    $/;"	l	subroutine:bpfind	file:
276	libbpfind.f	/^276     format('#HEADER   Consideration of Sugar mediated H-bondB: ',a3)$/;"	l	subroutine:bpfind	file:
277	libbpfind.f	/^277     format('#HEADER   Choise of HETATM entries: ',a3)   ! ans(hetatm+1)$/;"	l	subroutine:bpfind	file:
278	libbpfind.f	/^278     format('#HEADER   Option as Oligonucleotide: ',a3)  ! ans(oligo+1)$/;"	l	subroutine:bpfind	file:
279	libbpfind.f	/^279     format('#HEADER   Mol-ID: ',a4)$/;"	l	subroutine:bpfind	file:
3	libbpfind.f	/^3       continue$/;"	l	subroutine:bpfind	file:
3	libbpfind.f	/^3       format('ATOM',8x,a6,1x,a3,a3,i4,4x,3f8.3,f8.2)$/;"	l	subroutine:stream	file:
3	libbpfind.f	/^3       format('ATOM',i7,2x,a3,1x,a3,1x,a4,i4,4x,3f8.3,f8.2)$/;"	l	subroutine:readcif	file:
3	libbpfind.f	/^3     format('-VA [value] to set default pseudo angle cutoff ',$/;"	l	subroutine:showoptn	file:
331	libbpfind.f	/^331    format(I5,I5)$/;"	l	subroutine:bpfind	file:
337	libbpfind.f	/^337            format('#MODRES',3X,I5,2X,A3,2X,A4)$/;"	l	subroutine:hypothesis	file:
338	libbpfind.f	/^338     format('#='\/'#HEADER ====Number of POORLY defined and REJECTED'$/;"	l	subroutine:bpfind	file:
338	libbpfind.f	/^338    format('#='\/'#HEADER==== Number of POORLY defined and REJECTED'$/;"	l	subroutine:hypothesis	file:
35	libbpfind.f	/^35    FORMAT(A25)$/;"	l	subroutine:rnahelix	file:
375	libbpfind.f	/^375     format('#HEADER   HT option was selected to consider non-natural$/;"	l	subroutine:bpfind	file:
376	libbpfind.f	/^376     format('#HEADER   CH option was selected to avoid identification $/;"	l	subroutine:bpfind	file:
377	libbpfind.f	/^377     format('#HEADER   SG option was selected to avoid identification$/;"	l	subroutine:bpfind	file:
4	libbpfind.f	/^4	format(a15)$/;"	l	subroutine:stream	file:
4	libbpfind.f	/^4       format(12X,A4,1x,A3,1X,A1,I4,a1,3X,3F8.3,2x,f4.2,f6.2)$/;"	l	subroutine:bpfind	file:
4	libbpfind.f	/^4     format('-EN [value] to set default E-value cutoff ',$/;"	l	subroutine:showoptn	file:
5	libbpfind.f	/^5       format(A80)$/;"	l	subroutine:bpfind	file:
5	libbpfind.f	/^5       format(I7)$/;"	l	subroutine:stream	file:
5	libbpfind.f	/^5     FORMAT(A80)$/;"	l	subroutine:rnahelix	file:
5	libbpfind.f	/^5     format('-HT to include HETATM entries in PDB')$/;"	l	subroutine:showoptn	file:
6	libbpfind.f	/^6     format('#HEADER   Base Pairing\/Triplet Scheme for Structure',$/;"	l	subroutine:bpfind	file:
6	libbpfind.f	/^6     format('-CH to avoid identification of base pairs stabilized', $/;"	l	subroutine:showoptn	file:
60	libbpfind.f	/^60    format('#Column starting from > mark represent the following:')$/;"	l	subroutine:bpfind	file:
61	libbpfind.f	/^61    format('#>Serial number of nucleotides')$/;"	l	subroutine:bpfind	file:
62	libbpfind.f	/^62    format('#',6('-'),'>Residue number as in PDB')$/;"	l	subroutine:bpfind	file:
63	libbpfind.f	/^63    format('#',16('-'),'>Residue name')$/;"	l	subroutine:bpfind	file:
64	libbpfind.f	/^64    format('#',20('-'),'>Chain ID')$/;"	l	subroutine:bpfind	file:
65	libbpfind.f	/^65    format('#',22('-'),'>Serial number of the paired base')$/;"	l	subroutine:bpfind	file:
66	libbpfind.f	/^66    format('#',30('-'),'>Residue number of the paired base as in PDB')$/;"	l	subroutine:bpfind	file:
67	libbpfind.f	/^67    format('#',39('-'),'>Residue name of the paired base')$/;"	l	subroutine:bpfind	file:
68	libbpfind.f	/^68    format('#',43('-'),'>Chain ID of the paired base')$/;"	l	subroutine:bpfind	file:
69	libbpfind.f	/^69    format('#',47('-'),'>Base pair type')$/;"	l	subroutine:bpfind	file:
7	libbpfind.f	/^7          continue$/;"	l	subroutine:bpfind	file:
7	libbpfind.f	/^7     format('-SG to avoid identification of base pairs involving', $/;"	l	subroutine:showoptn	file:
70	libbpfind.f	/^70    format('#',53('-'),'>Base pair indicator')$/;"	l	subroutine:bpfind	file:
71	libbpfind.f	/^71    format('#',55('-'),'>E-value indicating base pair deformation')$/;"	l	subroutine:bpfind	file:
72	libbpfind.f	/^72    format('#',62('-'),'>Equivalent information for other pairs, such$/;"	l	subroutine:bpfind	file:
73	libbpfind.f	/^73    format('#HEADER   Program BPFIND run with the following options:')$/;"	l	subroutine:bpfind	file:
74	libbpfind.f	/^74    format('#HEADER   Distance cutoff: ',f3.1,'   Angle cutoff: ',$/;"	l	subroutine:bpfind	file:
75	libbpfind.f	/^75	format('#HEADER   Original number of residues in structure ',$/;"	l	subroutine:cleanpdb	file:
75	libbpfind.f	/^75    format('#HEADER   Results for NMR model no.',i6)$/;"	l	subroutine:bpfind	file:
753	libbpfind.f	/^753	format('#    Description of each column is the following:'\/$/;"	l	subroutine:bpfind	file:
76	libbpfind.f	/^76	format('#HEADER   Cleaned number of residues: ',i6)$/;"	l	subroutine:cleanpdb	file:
77	libbpfind.f	/^77    format('#====================================================='$/;"	l	subroutine:bpfind	file:
79	libbpfind.f	/^79      format(8x,i8)$/;"	l	subroutine:bpfind	file:
8	libbpfind.f	/^8     format('-AB to avoid base pairing between residue no. i and',$/;"	l	subroutine:showoptn	file:
834	libbpfind.f	/^834    format(i5,i5,a2)$/;"	l	subroutine:cleanpdb	file:
9	libbpfind.f	/^9     format('-OL to avoid printing base pairing information w.r.t.',$/;"	l	subroutine:showoptn	file:
99	libbpfind.f	/^99      continue              $/;"	l	subroutine:readcif	file:
99	libbpfind.f	/^99      continue$/;"	l	subroutine:bpfind	file:
99	libbpfind.f	/^99      continue$/;"	l	subroutine:stream	file:
9999	libbpfind.f	/^9999	format(\/'Invalid Input'\/' [USAGE]:  $/;"	l	subroutine:bpfind	file:
ALPHA	libbpfind.f	2892;"	c	subroutine:findhb3
ALPHA	libbpfind.f	3051;"	c	subroutine:findpair
ALPHA	libbpfind.f	3183;"	c	subroutine:verify
ALPHA	libbpfind.f	3264;"	c	subroutine:linearity
ALPHA	libbpfind.f	3297;"	c	subroutine:orientation
ALPHA	libbpfind.f	3352;"	c	subroutine:cleanpdb
ALPHA	libbpfind.f	343;"	c	subroutine:bpfind
ALPHA	libbpfind.f	4186;"	c	subroutine:hypothesis
ALPHA	libbpfind.f	4342;"	c	function:calcc1dis
Atom	atom.h	/^Atom::Atom() {$/;"	f	class:Atom
Atom	atom.h	/^Atom::Atom(Atom* a) {$/;"	f	class:Atom
Atom	atom.h	/^class Atom {$/;"	c
BETA	libbpfind.f	2893;"	c	subroutine:findhb3
BETA	libbpfind.f	3052;"	c	subroutine:findpair
BETA	libbpfind.f	3184;"	c	subroutine:verify
BETA	libbpfind.f	3353;"	c	subroutine:cleanpdb
BETA	libbpfind.f	344;"	c	subroutine:bpfind
BETA	libbpfind.f	3539;"	c	subroutine:rnahelix
BETA	libbpfind.f	4187;"	c	subroutine:hypothesis
BETA	libbpfind.f	4312;"	c	subroutine:renbase
BETA	libbpfind.f	4343;"	c	function:calcc1dis
BIN	Makefile	/^BIN    = bin$/;"	m
CHAINS	libbpfind.f	2891;"	c	subroutine:findhb3
CHAINS	libbpfind.f	3050;"	c	subroutine:findpair
CHAINS	libbpfind.f	3188;"	c	subroutine:verify
CHAINS	libbpfind.f	3351;"	c	subroutine:cleanpdb
CHAINS	libbpfind.f	342;"	c	subroutine:bpfind
CHAINS	libbpfind.f	4184;"	c	subroutine:hypothesis
CPP	Makefile	/^CPP = g++$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -Wall -static$/;"	m
CPPMET_ATOM_H	atom.h	6;"	d
CPPMET_METALBIND_H	metalbind.h	6;"	d
CPPMET_METALDEFS_H	metaldefs.h	6;"	d
CPPMET_MOLECULE_H	molecule.h	6;"	d
CPPMET_RESIDUE_H	residue.h	6;"	d
CPPMET_RNABP_H	rnabp.h	6;"	d
CPPMET_SECSTRUCT_H	struct.h	6;"	d
CPPMET_SYSPARAMS_H	sysparams.h	6;"	d
CPPMET_TREE_H	tree.h	6;"	d
CPPMET_UTIL_H	util.h	6;"	d
Current_params	metaldefs.h	/^class Current_params{$/;"	c
DELTA	libbpfind.f	346;"	c	subroutine:bpfind
DELTA	libbpfind.f	4190;"	c	subroutine:hypothesis
DELTAD	libbpfind.f	347;"	c	subroutine:bpfind
DELTAD	libbpfind.f	4191;"	c	subroutine:hypothesis
FORTFLAGS	Makefile	/^FORTFLAGS = -lgfortran -lquadmath$/;"	m
GAMA	libbpfind.f	2895;"	c	subroutine:findhb3
GAMA	libbpfind.f	3054;"	c	subroutine:findpair
GAMA	libbpfind.f	3186;"	c	subroutine:verify
GAMA	libbpfind.f	348;"	c	subroutine:bpfind
GAMA	libbpfind.f	4189;"	c	subroutine:hypothesis
HBQTYP	libbpfind.f	2889;"	c	subroutine:findhb3
HBQTYP	libbpfind.f	3047;"	c	subroutine:findpair
HBQTYP	libbpfind.f	340;"	c	subroutine:bpfind
HBQUA	libbpfind.f	2887;"	c	subroutine:findhb3
HBQUA	libbpfind.f	3045;"	c	subroutine:findpair
HBQUA	libbpfind.f	338;"	c	subroutine:bpfind
Ligand	metalbind.h	/^    Ligand(){$/;"	f	class:Ligand
Ligand	metalbind.h	/^class Ligand{$/;"	c
MAX_PROX	metalbind.h	21;"	d
MAX_SIZE	metalbind.h	20;"	d
Map	metalbind.h	/^Map::Map(Molecule* mol) {$/;"	f	class:Map
Map	metalbind.h	/^class Map{$/;"	c
Mediated	metalbind.h	/^    Mediated(){$/;"	f	class:Mediated
Mediated	metalbind.h	/^class Mediated{$/;"	c
Molecule	molecule.h	/^Molecule::Molecule(Molecule *mol) {$/;"	f	class:Molecule
Molecule	molecule.h	/^Molecule::Molecule(char *corfile, rnabp *rnabp) {$/;"	f	class:Molecule
Molecule	molecule.h	/^Molecule::Molecule(long maxsize, bool atm, bool hetatm) {$/;"	f	class:Molecule
Molecule	molecule.h	/^class Molecule {$/;"	c
NAMES	libbpfind.f	2890;"	c	subroutine:findhb3
NAMES	libbpfind.f	3049;"	c	subroutine:findpair
NAMES	libbpfind.f	3187;"	c	subroutine:verify
NAMES	libbpfind.f	3350;"	c	subroutine:cleanpdb
NAMES	libbpfind.f	341;"	c	subroutine:bpfind
NAMES	libbpfind.f	3538;"	c	subroutine:rnahelix
NAMES	libbpfind.f	4183;"	c	subroutine:hypothesis
NAMES	libbpfind.f	4341;"	c	function:calcc1dis
NUM_METAL	metaldefs.h	14;"	d
OBJDIR	Makefile	/^OBJDIR = obj$/;"	m
OBJFILES	Makefile	/^OBJFILES = main.o libbpfind.o$/;"	m
PI	metaldefs.h	15;"	d
Paremeters	metaldefs.h	/^    Paremeters(){$/;"	f	class:Paremeters
Paremeters	metaldefs.h	/^Paremeters::Paremeters(const char *param_file) {$/;"	f	class:Paremeters
Paremeters	metaldefs.h	/^class Paremeters{$/;"	c
Proximity	metalbind.h	/^    Proximity(){$/;"	f	class:Proximity
Proximity	metalbind.h	/^class Proximity{$/;"	c
Residue	residue.h	/^Residue::Residue() {$/;"	f	class:Residue
Residue	residue.h	/^class Residue {$/;"	c
SNIPPET_SIZE	tree.h	10;"	d
SRC	Makefile	/^SRC    = src$/;"	m
Site	metalbind.h	/^    Site() {$/;"	f	class:Site
Site	metalbind.h	/^class Site{$/;"	c
Structure	struct.h	/^Structure::Structure(char *dat_file, char *dbn_file, long size) {$/;"	f	class:Structure
Structure	struct.h	/^class Structure {$/;"	c
_global_metal	metaldefs.h	/^char _global_metal[NUM_METAL][5];$/;"	v
_global_metal_atomic	metaldefs.h	/^int _global_metal_atomic[NUM_METAL];$/;"	v
_global_metal_size	metaldefs.h	/^long _global_metal_size=0;$/;"	v
accn	sysparams.h	/^	    string accn;$/;"	m	class:sysparams
accnparam	sysparams.h	/^	    char accnparam[512];$/;"	m	class:sysparams
add	metalbind.h	/^    void add(Molecule* mol, long resindx, char type){$/;"	f	class:Proximity
add	metalbind.h	/^    void add(Proximity* prox,  long index, long offset, char loc, char rule, long water_indx, double dist, double$/;"	f	class:Mediated
add	metalbind.h	/^    void add(Proximity* prox, long index, long offset, char loc, char rule, double dist){$/;"	f	class:Ligand
add	residue.h	/^void Residue::add(Atom atm) {$/;"	f	class:Residue
add_metal	metalbind.h	/^    void add_metal(Atom* met){$/;"	f	class:Site
add_site	metalbind.h	/^void Map::add_site(Site* site, Ligand* lig, long ligindx) {$/;"	f	class:Map
adjst	metaldefs.h	/^    void adjst(Paremeters* prm, int atomic_no, char rule, double adjust){$/;"	f	class:Current_params
angl_deg	atom.h	/^    double angl_deg(Atom* b, Atom* c){$/;"	f	class:Atom
angle	metalbind.h	/^    double angle[MAX_SIZE];$/;"	m	class:Mediated
angle_rad	atom.h	/^double Atom::angle_rad(Atom* b, Atom* c) {$/;"	f	class:Atom
angparam	sysparams.h	/^	    char angparam[512];$/;"	m	class:sysparams
angvalparam	sysparams.h	/^	    char angvalparam[512];$/;"	m	class:sysparams
atm	molecule.h	/^    bool atm;$/;"	m	class:Molecule
atm	rnabp.h	/^    bool atm;$/;"	m	class:rnabp
atom	residue.h	/^    Atom atom[40];$/;"	m	class:Residue
atom_count	molecule.h	/^    long atom_count(){$/;"	f	class:Molecule
atomic_no	metalbind.h	/^    int atomic_no;$/;"	m	class:Site
atomic_no	metaldefs.h	/^    int atomic_no;$/;"	m	class:Current_params
atomic_no	metaldefs.h	/^    int atomic_no[NUM_METAL];$/;"	m	class:Paremeters
basenms	libbpfind.f	337;"	c	subroutine:bpfind
basenms	libbpfind.f	4195;"	c	subroutine:hypothesis
basenms	libbpfind.f	4314;"	c	subroutine:renbase
basepair	rnabp.h	/^class basepair {$/;"	c
bp	rnabp.h	/^    basepair* bp;$/;"	m	class:rnabp
bp	rnabp.h	/^    struct basepair* bp[4];$/;"	m	class:basepair	typeref:struct:basepair::basepair
bpfind	libbpfind.f	/^       subroutine bpfind(/;"	s
c_dst	metaldefs.h	/^    double c_dst[NUM_METAL];$/;"	m	class:Paremeters
c_dst2	metaldefs.h	/^    double c_dst2;$/;"	m	class:Current_params
calc_angle_energy	metaldefs.h	/^double calc_angle_energy(char* metal, double angle){$/;"	f
calcc1dis	libbpfind.f	/^        function calcc1dis(/;"	f
callbpfindc	libbpfind.f	/^       subroutine callbpfindc(/;"	s
chain	atom.h	/^    char chain[5];$/;"	m	class:Atom
chain	rnabp.h	/^    char chain[4];$/;"	m	class:basepair
chain	struct.h	/^    char chain[200][6];$/;"	m	class:Structure
chainparam	sysparams.h	/^	    char chainparam[512];$/;"	m	class:sysparams
chainvalparam	sysparams.h	/^	    char chainvalparam[512];$/;"	m	class:sysparams
chparam	sysparams.h	/^	    char chparam[512];$/;"	m	class:sysparams
cifid	rnabp.h	/^    long cifid;$/;"	m	class:basepair
cifparam	sysparams.h	/^	    char cifparam[512];$/;"	m	class:sysparams
cleaned_res	sysparams.h	/^	    int cleaned_res;$/;"	m	class:sysparams
cleanpdb	libbpfind.f	/^	subroutine cleanpdb(/;"	s
comp_metal_sites	metalbind.h	/^void comp_metal_sites(Molecule* met,$/;"	f
comp_nucleic	metalbind.h	/^void Site::comp_nucleic(char rule,$/;"	f	class:Site
comp_protein	metalbind.h	/^void Site::comp_protein(char rule,$/;"	f	class:Site
comp_water	metalbind.h	/^void Site::comp_water(char rule, Current_params *mprm) {$/;"	f	class:Site
comp_water_mediated	metalbind.h	/^void Site::comp_water_mediated(char rule, Current_params *mprm) {$/;"	f	class:Site
coord_no	metaldefs.h	/^    int coord_no;$/;"	m	class:Current_params
coord_no	metaldefs.h	/^    int coord_no[NUM_METAL];$/;"	m	class:Paremeters
copy	atom.h	/^void Atom::copy(Atom *a) {$/;"	f	class:Atom
copy	residue.h	/^void Residue::copy(Residue *residue) {$/;"	f	class:Residue
corid	rnabp.h	/^    long corid;$/;"	m	class:basepair
corparam	sysparams.h	/^	    char corparam[50];$/;"	m	class:sysparams
counting_tree_fprintf	tree.h	/^void counting_tree_fprintf(FILE* fp, struct counting_tree_t* t, int* count, char newline){$/;"	f
counting_tree_free	tree.h	/^void counting_tree_free(struct counting_tree_t* t){$/;"	f
counting_tree_getnode	tree.h	/^struct counting_tree_t* counting_tree_getnode(char* line){$/;"	f
counting_tree_insert	tree.h	/^void counting_tree_insert(struct counting_tree_t* root, char* line){$/;"	f
counting_tree_node_count	tree.h	/^long counting_tree_node_count(struct counting_tree_t* t){$/;"	f
counting_tree_search	tree.h	/^int counting_tree_search(struct counting_tree_t* t, char* word){$/;"	f
counting_tree_t	tree.h	/^struct counting_tree_t{$/;"	s
cum	libbpfind.f	3358;"	c	subroutine:cleanpdb
cum	libbpfind.f	3537;"	c	subroutine:rnahelix
cum	libbpfind.f	354;"	c	subroutine:bpfind
cum	libbpfind.f	3971;"	c	subroutine:readcif
cum	libbpfind.f	4194;"	c	subroutine:hypothesis
dbn	struct.h	/^    char* dbn;$/;"	m	class:Structure
dist	metalbind.h	/^    double dist[MAX_SIZE];$/;"	m	class:Ligand
distsqr	atom.h	/^double Atom::distsqr(Atom * b) {$/;"	f	class:Atom
eval	rnabp.h	/^    double eval;$/;"	m	class:basepair
evaltypeparam	sysparams.h	/^	    char evaltypeparam[512];$/;"	m	class:sysparams
ext	sysparams.h	/^	    string ext;$/;"	m	class:sysparams
file_dir	sysparams.h	/^	    string file_dir;$/;"	m	class:sysparams
file_name_join	util.h	/^void file_name_join(char* joined_file_name, const char* path, const char* file_name, const char* ext){$/;"	f
file_name_split	util.h	/^void file_name_split(char* file_path, char* file_name, char* file_ext, char* src_file){$/;"	f
fill_proximity	metalbind.h	/^void Site::fill_proximity(Molecule *mol, char moltype) {$/;"	f	class:Site
find_amino	util.h	/^int find_amino(char* amino){$/;"	f
find_nucleic	util.h	/^int find_nucleic(char* nucleic){$/;"	f
findhb3	libbpfind.f	/^       subroutine findhb3(/;"	s
findpair	libbpfind.f	/^       subroutine findpair(/;"	s
fprint_angle	metalbind.h	/^    void fprint_angle(FILE* fp){$/;"	f	class:Site
fprint_basepair	metalbind.h	/^    void fprint_basepair(FILE* fp, rnabp* bp, int* flag){$/;"	f	class:Site
fprint_basepair_motifs	metalbind.h	/^    void fprint_basepair_motifs(FILE* fp, rnabp* bp, Structure* struc, int* flag){$/;"	f	class:Site
fprint_bp	rnabp.h	/^    void fprint_bp(FILE* fp){$/;"	f	class:basepair
fprint_bp	rnabp.h	/^    void fprint_bp(FILE* fp){$/;"	f	class:rnabp
fprint_bp_short	rnabp.h	/^    void fprint_bp_short(FILE* fp, char is_target, Atom* met, Atom* water, char sec_seq, char* loc){$/;"	f	class:basepair
fprint_charmm_format	atom.h	/^    void fprint_charmm_format(FILE* fp, long corid){$/;"	f	class:Atom
fprint_charmm_format	residue.h	/^void Residue::fprint_charmm_format(FILE *fp, long corid) {$/;"	f	class:Residue
fprint_inligand	metalbind.h	/^    void fprint_inligand(FILE *fp){$/;"	f	class:Site
fprint_summary	metalbind.h	/^    void fprint_summary(FILE* fp){$/;"	f	class:Site
fprint_wmed	metalbind.h	/^    void fprint_wmed(FILE* fp){$/;"	f	class:Site
fprint_wmed_basepair	metalbind.h	/^    void fprint_wmed_basepair(FILE *fp, rnabp *bp, int *flag){$/;"	f	class:Site
fprint_wmed_basepair_motifs	metalbind.h	/^    void fprint_wmed_basepair_motifs(FILE* fp, rnabp* bp, Structure* struc, int* flag){$/;"	f	class:Site
freq	tree.h	/^    long freq;$/;"	m	struct:counting_tree_t
gen_verna	metalbind.h	/^    void gen_verna(char *file){$/;"	f	class:Map
get_all_atoms	molecule.h	/^    void get_all_atoms(Atom* atmarray[], long* atmcount){$/;"	f	class:Molecule
get_atomic_no	metaldefs.h	/^int get_atomic_no(char* metal){$/;"	f
get_molecule	metalbind.h	/^    Molecule* get_molecule(long index){$/;"	f	class:Proximity
get_res_loc	util.h	/^char get_res_loc(Atom* atom, char restype){$/;"	f
get_residue	metalbind.h	/^    Residue* get_residue(long index){$/;"	f	class:Proximity
hb_dst	metaldefs.h	/^    double hb_dst;$/;"	m	class:Current_params
hb_dst	metaldefs.h	/^    double hb_dst[NUM_METAL];$/;"	m	class:Paremeters
hdparam	sysparams.h	/^	    char hdparam[512];$/;"	m	class:sysparams
hdvalparam	sysparams.h	/^	    char hdvalparam[512];$/;"	m	class:sysparams
hetatm	molecule.h	/^    bool hetatm;$/;"	m	class:Molecule
hetatm	rnabp.h	/^    bool hetatm;$/;"	m	class:rnabp
hoh_dst	metaldefs.h	/^    double hoh_dst[NUM_METAL];$/;"	m	class:Paremeters
hoh_dst2	metaldefs.h	/^    double hoh_dst2;$/;"	m	class:Current_params
htparam	sysparams.h	/^	    char htparam[512];$/;"	m	class:sysparams
hypothesis	libbpfind.f	/^       subroutine hypothesis(/;"	s
id	atom.h	/^    long id;$/;"	m	class:Atom
ion_rad	metaldefs.h	/^    double ion_rad;$/;"	m	class:Current_params
ion_rad	metaldefs.h	/^    double ion_rad[NUM_METAL];$/;"	m	class:Paremeters
is_HOH	util.h	/^int is_HOH(char* res){$/;"	f
is_metal	metaldefs.h	/^int is_metal(char* metal){$/;"	f
is_metal1	metaldefs.h	/^int is_metal1(char* metal){$/;"	f
left	tree.h	/^    struct counting_tree_t* left;$/;"	m	struct:counting_tree_t	typeref:struct:counting_tree_t::counting_tree_t
ligand	metalbind.h	/^    Ligand ligand;$/;"	m	class:Mediated
ligand	metalbind.h	/^    Ligand ligand;$/;"	m	class:Site
linearity	libbpfind.f	/^        subroutine linearity(/;"	s
link_count	metalbind.h	/^    long link_count[MAX_SIZE];$/;"	m	class:Mediated
loc	atom.h	/^    char loc[5];$/;"	m	class:Atom
loc	metalbind.h	/^    char loc[MAX_SIZE];      \/\/ S for sugar, N for base, P fpr php etc.$/;"	m	class:Ligand
local	libbpfind.f	4179;"	c	subroutine:hypothesis
main	main.cpp	/^int main(int argc, char* argv[]) {$/;"	f
max	molecule.h	/^    long max;$/;"	m	class:Molecule
met_dst	metaldefs.h	/^    double met_dst[NUM_METAL];$/;"	m	class:Paremeters
met_dst2	metaldefs.h	/^    double met_dst2;$/;"	m	class:Current_params
metal	metalbind.h	/^    Atom* metal;$/;"	m	class:Site
metal1	metalbind.h	/^    Site** metal1;$/;"	m	class:Map
metal2	metalbind.h	/^    Site** metal2;$/;"	m	class:Map
metal3	metalbind.h	/^    Site** metal3;$/;"	m	class:Map
mol	metalbind.h	/^    Molecule* mol;$/;"	m	class:Map
mol	metalbind.h	/^    Molecule* mol[MAX_PROX];$/;"	m	class:Proximity
mol	metalbind.h	/^    Molecule* mol[MAX_SIZE];$/;"	m	class:Ligand
n	metaldefs.h	/^    int n;$/;"	m	class:Paremeters
n_dst	metaldefs.h	/^    double n_dst[NUM_METAL];$/;"	m	class:Paremeters
n_dst2	metaldefs.h	/^    double n_dst2;$/;"	m	class:Current_params
name	metaldefs.h	/^    char name[5];$/;"	m	class:Current_params
name	metaldefs.h	/^    char name[NUM_METAL][5];$/;"	m	class:Paremeters
name	rnabp.h	/^    char name[5];$/;"	m	class:basepair
now	util.h	/^void now(char output[]){$/;"	f
nres	rnabp.h	/^    long nres;$/;"	m	class:rnabp
num	libbpfind.f	3357;"	c	subroutine:cleanpdb
num	libbpfind.f	353;"	c	subroutine:bpfind
num	libbpfind.f	4193;"	c	subroutine:hypothesis
num_chain	struct.h	/^    long int num_chain;$/;"	m	class:Structure
num_res	struct.h	/^    long int num_res;$/;"	m	class:Structure
numbp	rnabp.h	/^    long numbp;$/;"	m	class:basepair
o_dst	metaldefs.h	/^    double o_dst[NUM_METAL];$/;"	m	class:Paremeters
o_dst2	metaldefs.h	/^    double o_dst2;$/;"	m	class:Current_params
occu	atom.h	/^    double occu;$/;"	m	class:Atom
occur	libbpfind.f	2899;"	c	subroutine:findhb3
occur	libbpfind.f	3058;"	c	subroutine:findpair
occur	libbpfind.f	3190;"	c	subroutine:verify
occur	libbpfind.f	3356;"	c	subroutine:cleanpdb
occur	libbpfind.f	352;"	c	subroutine:bpfind
occur	libbpfind.f	4185;"	c	subroutine:hypothesis
offset	metalbind.h	/^    long offset[MAX_SIZE];$/;"	m	class:Ligand
options	libbpfind.f	2897;"	c	subroutine:findhb3
options	libbpfind.f	3056;"	c	subroutine:findpair
options	libbpfind.f	350;"	c	subroutine:bpfind
options	libbpfind.f	4086;"	c	subroutine:stream
orientation	libbpfind.f	/^	subroutine orientation(/;"	s
p_dst	metaldefs.h	/^    double p_dst[NUM_METAL];$/;"	m	class:Paremeters
p_dst2	metaldefs.h	/^    double p_dst2;$/;"	m	class:Current_params
print	atom.h	/^    void print(){$/;"	f	class:Atom
print	metaldefs.h	/^    void print(){$/;"	f	class:Current_params
print_params	sysparams.h	/^	    void print_params(FILE* fp)$/;"	f	class:sysparams
priseq	struct.h	/^    char* priseq;$/;"	m	class:Structure
pro_amino	util.h	/^char pro_amino[20][2][10]={{"ALA","HYPHOB"}, {"ARG","BASIC"}, {"ASN","POLNUTRL"}, {"ASP", "ACIDIC"}, {"CYS",$/;"	v
pro_amino_size	util.h	/^int pro_amino_size = 20;$/;"	v
prox	metalbind.h	/^    Proximity prox;$/;"	m	class:Site
readcif	libbpfind.f	/^        subroutine readcif /;"	s
removebl	libbpfind.f	/^        subroutine removebl(/;"	s
removedta	libbpfind.f	/^        subroutine removedta(/;"	s
renbase	libbpfind.f	/^        subroutine renbase(/;"	s
reset	molecule.h	/^void Molecule::reset(bool atm, bool hetatm) {$/;"	f	class:Molecule
resid	atom.h	/^    long resid;$/;"	m	class:Atom
residue	libbpfind.f	2898;"	c	subroutine:findhb3
residue	libbpfind.f	3057;"	c	subroutine:findpair
residue	libbpfind.f	3189;"	c	subroutine:verify
residue	libbpfind.f	3355;"	c	subroutine:cleanpdb
residue	libbpfind.f	351;"	c	subroutine:bpfind
residue	libbpfind.f	4192;"	c	subroutine:hypothesis
residue	molecule.h	/^    Residue *residue;$/;"	m	class:Molecule
resindx	metalbind.h	/^    long      resindx[MAX_PROX];$/;"	m	class:Proximity
resindx	metalbind.h	/^    long resindx[MAX_SIZE];$/;"	m	class:Ligand
resname	atom.h	/^    char resname[5];$/;"	m	class:Atom
resname	rnabp.h	/^    char resname[4];$/;"	m	class:basepair
restype	metalbind.h	/^    char restype[MAX_PROX];$/;"	m	class:Proximity
restype	metalbind.h	/^    char restype[MAX_SIZE]; \/\/p for protein n for nuc w for water M for met$/;"	m	class:Ligand
right	tree.h	/^    struct counting_tree_t* right;$/;"	m	struct:counting_tree_t	typeref:struct:counting_tree_t::counting_tree_t
rnabp	rnabp.h	/^class rnabp{$/;"	c
rnabp	rnabp.h	/^rnabp::rnabp() {$/;"	f	class:rnabp
rnabp	rnabp.h	/^rnabp::rnabp(char* outfile){$/;"	f	class:rnabp
rnahelix	libbpfind.f	/^       subroutine rnahelix(/;"	s
rule	metalbind.h	/^    char rule[MAX_SIZE];$/;"	m	class:Ligand
scan_cif	molecule.h	/^void Molecule::scan_cif(char *ciffile,  int (*pf)(char *)) {$/;"	f	class:Molecule
secseq	struct.h	/^    char* secseq;$/;"	m	class:Structure
sgparam	sysparams.h	/^	    char sgparam[512];$/;"	m	class:sysparams
showoptn	libbpfind.f	/^	subroutine showoptn(/;"	s
site_populate	metalbind.h	/^void Site::site_populate($/;"	f	class:Site
size	metalbind.h	/^    long size;$/;"	m	class:Ligand
size	metalbind.h	/^    long size;$/;"	m	class:Mediated
size	metalbind.h	/^    long size;$/;"	m	class:Proximity
size	molecule.h	/^    long size;$/;"	m	class:Molecule
size	residue.h	/^    long size;$/;"	m	class:Residue
str	libbpfind.f	3536;"	c	subroutine:rnahelix
str	libbpfind.f	355;"	c	subroutine:bpfind
stream	libbpfind.f	/^        subroutine stream(/;"	s
sysparams	sysparams.h	/^	    sysparams(){$/;"	f	class:sysparams
sysparams	sysparams.h	/^class sysparams{$/;"	c
text	tree.h	/^    char text[SNIPPET_SIZE];$/;"	m	struct:counting_tree_t
today	util.h	/^void today(char output[]){$/;"	f
txtlen	tree.h	/^    int txtlen;$/;"	m	struct:counting_tree_t
type	atom.h	/^    char type; \/\/ A for Atom H for hetatm.$/;"	m	class:Atom
type	rnabp.h	/^    char type[3];$/;"	m	class:basepair
type	sysparams.h	/^	    string type;$/;"	m	class:sysparams
vdw_rad	metaldefs.h	/^    double vdw_rad;$/;"	m	class:Current_params
vdw_rad	metaldefs.h	/^    double vdw_rad[NUM_METAL];$/;"	m	class:Paremeters
verify	libbpfind.f	/^        subroutine verify(/;"	s
waterindx	metalbind.h	/^    long waterindx[MAX_SIZE];$/;"	m	class:Mediated
wmed	metalbind.h	/^    Mediated wmed;$/;"	m	class:Site
x	atom.h	/^    double x;$/;"	m	class:Atom
y	atom.h	/^    double y;$/;"	m	class:Atom
z	atom.h	/^    double z;$/;"	m	class:Atom
~Molecule	molecule.h	/^Molecule::~Molecule() {$/;"	f	class:Molecule
~Residue	residue.h	/^Residue::~Residue() {$/;"	f	class:Residue
~Structure	struct.h	/^Structure::~Structure() {$/;"	f	class:Structure
~rnabp	rnabp.h	/^    ~rnabp(){$/;"	f	class:rnabp
